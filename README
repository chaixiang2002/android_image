# Android 镜像构建工具

这是一个用于构建和管理 Android 镜像的工具集，支持 Android 10 和 Android 14 版本。

## 项目特性

- 支持 Android 10 和 Android 14 镜像构建
- 基于 Docker 的隔离构建环境
- 自动化的构建和部署流程
- MacVLAN 网络配置支持
- 完整的工具链和脚本集合

## 项目结构

```
.
├── android_10/        # Android 10 相关资源
├── android_14/        # Android 14 相关资源
├── build/            # 通用构建环境
│   ├── Dockerfile    # 构建环境定义
│   ├── build.sh      # 构建脚本
│   └── init_wrapper  # 初始化包装器
├── build_10/         # Android 10 专用构建环境
├── sh/               # 核心脚本
│   ├── 0build-runner.sh  # 构建运行器
│   ├── 1macvlan.sh      # 网络配置脚本
│   ├── 3run.sh          # 主运行脚本
│   └── clean.sh         # 清理脚本
└── util/             # 工具函数库
    └── util.sh       # 通用工具脚本
```

## 快速开始

### 环境要求

- Docker 20.10+
- Linux 环境（推荐 Ubuntu 20.04+）
- 至少 16GB RAM
- 至少 100GB 可用磁盘空间

### 基本使用

1. 克隆仓库：
```bash
git clone <repository_url>
cd android_image
```

2. 配置环境：
```bash
cp .env.example .env
# 编辑 .env 文件，设置必要的环境变量
```

3. 构建镜像：
```bash
# 构建 Android 10 镜像
./sh/0build-runner.sh 10

# 构建 Android 14 镜像
./sh/0build-runner.sh 14
```

4. 配置网络：
```bash
./sh/1macvlan.sh
```

5. 运行容器：
```bash
./sh/3run.sh
```

## 详细文档

### 构建过程

构建过程包含以下步骤：
1. 准备构建环境（Docker 容器）
2. 下载和验证源代码
3. 编译 Android 系统
4. 打包镜像文件

### 网络配置

项目使用 MacVLAN 网络模式，提供以下特性：
- 容器独立 IP 地址
- 直接访问物理网络
- 支持网络隔离

### 脚本说明

- `0build-runner.sh`: 构建环境启动器
- `1macvlan.sh`: 网络配置工具
- `3run.sh`: 容器运行管理
- `clean.sh`: 环境清理工具

## 常见问题

1. **构建失败**
   - 检查系统资源是否充足
   - 验证源代码完整性
   - 查看详细日志

2. **网络配置问题**
   - 确认网卡配置正确
   - 检查 IP 地址分配
   - 验证网络权限

3. **运行异常**
   - 检查环境变量配置
   - 确认容器状态
   - 查看系统日志

## 贡献指南

1. Fork 项目
2. 创建特性分支
3. 提交变更
4. 推送到分支
5. 创建 Pull Request

请确保遵循项目的代码规范和提交规范。

## 版本历史

- v1.0.0 (2024-03)
  - 初始版本发布
  - 支持 Android 10/14 构建
  - 基础工具链实现

## 许可证

[License Name] - 详见 LICENSE 文件

## 联系方式

- 项目维护者：[维护者姓名]
- 邮箱：[联系邮箱]

## 致谢

感谢所有为项目做出贡献的开发者。 